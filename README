Required to run:
- Python 2.7
- Icarus Verilog (for simulation) [http://iverilog.icarus.com/]
- Altera Quartus (for FPGA)

To run in simulation:

1. Assemble a program (in the test directory), with 'sourcefile' in the command line below being the file to be run:

tools/assemble.py tests/sourcefile.hex tests/sourcefile.asm

(First parameter is the output file and second is the source.  Be careful not to swap or you'll need to write the program again :)

2. Build the verilog model:

cd rtl
make

3. Run a verilog model (making the +bin parameter point to the program you want to run).

vvp multi-sim.vvp +bin=../tests/sourcefile.hex

Any value written to address 0xFFFF will be displayed on the console.  A trace file will be dumped into 'trace.lxt', which can be read with GTKWave or the like.


----------
To run on FPGA:
1. Build the bootloader.  

cd rtl
make

2. You'll need to initialize the contents of each global memory uncommenting the $readmemh call into the initial clause of spsram.v.  Put the appropriate compiled program as 'program.hex' in the fpga/cIIstarter directory.

3. Synthesize design by opening 'fpga/cIIstarter/cIIstarter.qpf'.  Note that the design needs to be resynthesized each time the program is changed.




